CREATE DATABASE ftStudyDB;

USE ftStudyDB;

--------------------
--   Locations    --
-- requires: none --
--------------------

CREATE COUNTRY (
	CountryID int IDENTITY(1,1) NOT NULL,
	CountryName varchar(255) NOT NULL,
	CONSTRAINT PK_COUNTRY PRIMARY KEY NONCLUSTERED (CountryID)
);

CREATE REGION (
	RegionID int IDENTITY(1,1) NOT NULL,
	CountryID int NOT NULL,
	RegionName varchar(255) NOT NULL,
	CONSTRAINT PK_REGION PRIMARY KEY NONCLUSTERED (RegionID), 
	CONSTRAINT FK_REGION_COUNTRY FOREIGN KEY (CountryID) 
    	REFERENCES COUNTRY (CountryID) 
    	ON DELETE CASCADE
    	ON UPDATE CASCADE
);

CREATE CITY (
	CityID int IDENTITY(1,1) NOT NULL,
	RegionID int NOT NULL,
	CityName varchar(255),
	CONSTRAINT PK_CITY PRIMARY KEY NONCLUSTERED (CityID), 
	CONSTRAINT FK_CITY_REGION FOREIGN KEY (RegionID) 
    	REFERENCES REGION (RegionID) 
    	ON DELETE CASCADE
    	ON UPDATE CASCADE	
);

--------------------
--    Airlines    --
-- requires: CITY --
--------------------

CREATE AIRLINE (
	AirlineID int IDENTITY(1,1) NOT NULL,
	AirlineName varchar(255) NOT NULL,
	CONSTRAINT PK_AIRLINE PRIMARY KEY NONCLUSTERED (AirlineID)
);

CREATE FLIGHT (
	FlightID int IDENTITY(1,1) NOT NULL,
	AirlineID int NOT NULL,
	FlightDepartureCityID int NOT NULL,
	FlightArrivalCityID int NOT NULL,
	FligthDepartureDate date NOT NULL,
	FlightArrivalDate date NOT NULL,
	FlightNumber varchar(255) NOT NULL,
	CONSTRAINT PK_FLIGHT PRIMARY KEY NONCLUSTERED (FlightID),
	CONSTRAINT FK_FLIGHT_AIRLINE FOREIGN KEY (AirlineID)
		REFERENCES AIRLINE (AirlineID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_FLIGHT_DEPARTURECITY FOREIGN KEY (FlightDepartureCityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_FLIGHT_ARRIVALCITY FOREIGN KEY (FlightArrivalCityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

--------------------
--     Hotels     --
-- requires: CITY --
--------------------

CREATE HOTEL_TYPE (
	HotelTypeID int IDENTITY(1,1) NOT NULL,
	HotelTypeName varchar(255) NOT NULL,
	HotelTypeDesc varchar(255) NOT NULL,
	CONSTRAINT PK_HOTELTYPE PRIMARY KEY NONCLUSTERED (HotelTypeID)
);

CREATE HOTEL (
	HotelID int IDENTITY(1,1) NOT NULL,
	HotelTypeID int NOT NULL,
	CityID int NOT NULL,
	HotelName varchar(255) NOT NULL,
	HotelDesc varchar(255) NOT NULL,
	HotelStreetAddress varchar(255) NOT NULL,
	CONSTRAINT PK_HOTEL PRIMARY KEY NONCLUSTERED (HotelID),
	CONSTRAINT FK_HOTEL_HOTELTYPE FOREIGN KEY (HotelTypeID)
		REFERENCES HOTEL_TYPE (HotelTypeID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_HOTEL_CITY FOREIGN KEY (CityID),
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

--------------------
--    Transit     --
-- requires: none --
--------------------

CREATE TRANSIT_TYPE (
	TransitTypeID int IDENTITY(1,1) NOT NULL,
	TransitTypeName varchar(255) NOT NULL,
	TransitTypeDesc varchar(255) NOT NULL,
	CONSTRAINT PK_TRANSITTYPE PRIMARY KEY NONCLUSTERED (TransitTypeID)
);

CREATE TRANSIT_COMPANY (
	TransitCompanyID int IDENTITY(1,1) NOT NULL,
	TransitCompanyName varchar(255) NOT NULL,
	TransitCompanyDesc varchar(255) NOT NULL,
	CONSTRAINT PK_TRANSITCOMPANY PRIMARY KEY NONCLUSTERED (TransitCompanyID)
);

CREATE TRANSIT (
	TransitID int IDENTITY(1,1) NOT NULL,
	TransitTypeID int NOT NULL,
	TransitCompanyID int NOT NULL,
	TransitDesc varchar(255) NOT NULL,
	CONSTRAINT PK_TRANSIT PRIMARY KEY NONCLUSTERED (TransitID),
	CONSTRAINT FK_TRANSIT_TRANSITTYPE FOREIGN KEY (TransitTypeID)
		REFERENCES TRANSIT_TYPE (TransitTypeID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRANSIT_TRANSITCOMPANY FOREIGN KEY (TransitCompanyID),
		REFERENCES TRANSIT_COMPANY (TransitCompanyID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

--------------------
--   Activities   --
-- requires: none --
--------------------

CREATE ACTIVITY_CATEGORY (
	ActivityCategoryID int NOT NULL,
	ActivityCategoryName varchar(255) NOT NULL,
	ActivityCategoryDesc varchar(255) NOT NULL,
	CONSTRAINT PK_ACTIVITYCATEGORY PRIMARY KEY NONCLUSTERED (ActivityCategoryID)
);

CREATE ACTIVITY_TYPE (
	ActivityTypeID int NOT NULL,
	ActivityCategoryID int NOT NULL,
	ActivityTypeName varchar(255) NOT NULL,
	ActivityTypeDesc varchar(255) NOT NULL,
	CONSTRAINT PK_ACTIVITYTYPE PRIMARY KEY NONCLUSTERED (ActivityTypeID),
	CONSTRAINT FK_ACTIVITYTYPE_ACTIVITYCATEGORY FOREIGN KEY (ActivityCategoryID)
		REFERENCES ACTIVITY_CATEGORY (ActivityCategoryID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

--------------------
--    Sponsors    --
-- requires: CITY --
--------------------

CREATE SPONSOR_TYPE (
	SponsorTypeID int NOT NULL,
	SponsorTypeName varchar(255) NOT NULL,
	SponsorTypeDesc varchar(255) NOT NULL,
	CONSTRAINT PK_SPONSORTYPE PRIMARY KEY NONCLUSTERED (SponsorTypeID)
);

CREATE SPONSOR (
	SponsorID int NOT NULL,
	SponsorTypeID int NOT NULL,
	CityID int NOT NULL,
	SponsorName varchar(255) NOT NULL,
	SponsorDesc varchar(255) NOT NULL,
	SponsorStreetAddress varchar(255) NOT NULL,
	CONSTRAINT PK_SPONSOR PRIMARY KEY NONCLUSTERED (SponsorID),
	CONSTRAINT FK_SPONSOR_SPONSORTYPE FOREIGN KEY (SponsorTypeID)
		REFERENCES SPONSOR_TYPE (SponsorTypeID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_SPONSOR_CITY FOREIGN KEY (CityID),
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE	
);

CREATE SPONSOR_CONTACT (
	SponsorContactID int NOT NULL,
	SponsorID int NOT NULL,
	SponsorContactFName varchar(255) NOT NULL,
	SponsorContactLName varchar(255) NOT NULL,
	SponsorContactPhoneNumber varchar(255) NOT NULL,
	SponsorContactEmail varchar(255) NOT NULL,
	CONSTRAINT PK_SPONSORCONTACT PRIMARY KEY NONCLUSTERED (SponsorContactID),
	CONSTRAINT FK_SPONSORCONTACT_SPONSOR FOREIGN KEY (SponsorID)
		REFERENCES SPONSOR (SponsorID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

--------------------------------
--    Students and Leaders    --
--       requires: none       --
--------------------------------

CREATE STUDENT_TYPE (
	StudentTypeID int NOT NULL,
	StudentTypeName varchar(255) NOT NULL,
	StudentTypeDesc varchar(255) NOT NULL,
	CONSTRAINT PK_STUDENTTYPE PRIMARY KEY NONCLUSTERED (StudentTypeID)
);

CREATE STUDENT (
	StudentID int NOT NULL,
	StudentTypeID int NOT NULL,
	StudentFName varchar(255) NOT NULL,
	StudentLName varchar(255) NOT NULL,
	StudentDOB date NOT NULL,
	StudentGraduationDate date NOT NULL,
	StudentPhoneNumber varchar(255) NOT NULL,
	StudentEmal varchar(255) NOT NULL,
	CONSTRAINT PK_STUDENT PRIMARY KEY NONCLUSTERED (StudentID),
	CONSTRAINT FK_STUDENT_STUDENTTYPE FOREIGN KEY (StudentTypeID)
		REFERENCES STUDENT_TYPE (StudentTypeID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE LEADER (
	LeaderID int NOT NULL,
	LeaderFName varchar(255) NOT NULL,
	LeaderLName varchar(255) NOT NULL,
	LeaderDOB date NOT NULL,
	LeaderPhoneNumber varchar(255) NOT NULL,
	LeaderEmail varchar(255) NOT NULL,
	CONSTRAINT PK_LEADER PRIMARY KEY NONCLUSTERED (LeaderID)
);

---------------------------------------
--              Groups               --
-- requires: STUDENT, LEADER, FLIGHT --
---------------------------------------

CREATE GROUP (
	GroupID int NOT NULL,
	GroupMainLeaderID int NOT NULL,
	GroupCoLeaderID int NOT NULL,
	GroupName varchar(255) NOT NULL,
	GroupDesc varchar(255) NOT NULL,
	CONSTRAINT PK_GROUP PRIMARY KEY NONCLUSTERED (GroupID),
	CONSTRAINT FK_GROUP_MAINLEADER FOREIGN KEY (MainLeaderID)
		REFERENCES LEADER (LeaderID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_GROUP_COLEADER FOREIGN KEY (CoLeaderID)
		REFERENCES LEADER (LeaderID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE GROUP_STUDENT (
	GroupStudentID int NOT NULL,
	StudentID int NOT NULL,
	GroupID int NOT NULL,
	CONSTRAINT PK_GROUPSTUDENT PRIMARY KEY NONCLUSTERED (GroupStudentID),
	CONSTRAINT FK_GROUPSTUDENT_STUDENT FOREIGN KEY (StudentID)
		REFERENCES STUDENT (StudentID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_GROUPSTUDENT_GROUP FOREIGN KEY (GroupID)
		REFERENCES GROUP (GroupID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE FLIGHT_GROUP_STUDENT (
	FlightGroupStudentID int NOT NULL,
	FlightID int NOT NULL,
	GroupStudentID int NOT NULL,
	CONSTRAINT PK_FLIGHTGROUPSTUDENT PRIMARY KEY NONCLUSTERED (FlightGroupStudentID),
	CONSTRAINT FK_FLIGHTGROUPSTUDENT_FLIGHT FOREIGN KEY (FlightID)
		REFERENCES FLIGHT (FlightID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_FLIGHTGROUPSTUDENT_GROUPSTUDENT FOREIGN KEY (GroupStudentID)
		REFERENCES GROUP_STUDENT (GroupStudentID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

---------------------------------------------------------------------------
--                                Trips                                  --
-- requires: GROUP, SPONSOR_CONTACT, CITY, ACTIVITY_TYPE, TRANSIT, HOTEL --
---------------------------------------------------------------------------

CREATE TRIP (
	TripID int NOT NULL,
	GroupID int NOT NULL,
	SponsorContactID int NOT NULL,
	CONSTRAINT PK_TRIP PRIMARY KEY NONCLUSTERED (TripID),
	CONSTRAINT FK_TRIP_GROUP FOREIGN KEY (GroupID)
		REFERENCES GROUP (GroupID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIP_SPONSORCONTACT FOREIGN KEY (SponsorContactID)
		REFERENCES SPONSOR_CONTACT (SponsorContactID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TRIP_CITY (
	TripCityID int NOT NULL,
	TripID int NOT NULL,
	CityID int NOT NULL,
	TripCityArrivalDate date NOT NULL,
	TripCityDepartureDate date NOT NULL,
	CONSTRAINT PK_TRIPCITY PRIMARY KEY NONCLUSTERED (TripCityID),
	CONSTRAINT FK_TRIPCITY_TRIP FOREIGN KEY (TripID)
		REFERENCES TRIP (TripID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPCITY_CITY FOREIGN KEY (CityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TRIP_ACTIVITY (
	TripActivityID int NOT NULL,
	TripID int NOT NULL,
	ActivityTypeID int NOT NULL,
	CityID int NOT NULL,
	ActivityName varchar(255) NOT NULL,
	ActivityDesc varchar(255) NOT NULL,
	ActivityStartDate date NOT NULL,
	ActivityEndDate date NOT NULL,
	ActivityStreetAddress varchar(255) NOT NULL,
	ActivityCost money NOT NULL,
	CONSTRAINT PK_TRIPACTIVITY PRIMARY KEY NONCLUSTERED (TripActivityID),
	CONSTRAINT FK_TRIPACTIVITY_TRIP (TripID)
		REFERENCES TRIP FOREIGN KEY (TripID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPACTIVITY_ACTIVITYTYPE FOREIGN KEY (ActivityTypeID)
		REFERENCES ACTIVITY_TYPE (ActivityTypeID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPACTIVITY_CITY FOREIGN KEY (CityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TRIP_HOTEL (
	TripHotelID int NOT NULL,
	TripID int NOT NULL,
	HotelID int NOT NULL,
	HotelRoomsReserved int NOT NULL,
	HotelCheckInDate date NOT NULL,
	HotelCheckOutDate date NOT NULL,
	HotelCost money NOT NULL,
	CONSTRAINT PK_TRIPHOTEL PRIMARY KEY NONCLUSTERED (TripHotelID),
	CONSTRAINT FK_TRIPHOTEL_TRIP FOREIGN KEY (TripID)
		REFERENCES TRIP (TripID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPHOTEL_HOTEL FOREIGN KEY (HotelID)
		REFERENCES HOTEL (HotelID)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

CREATE TRIP_TRANSIT (
	TripTransitID int NOT NULL,
	TripID int NOT NULL,
	TransitID int NOT NULL,
	TripTransitPickupCityID int NOT NULL,
	TripTransitDropoffCityID int NOT NULL,
	TripTransitPickupDate date NOT NULL,
	TripTransitDropoffDate date NOT NULL,
	TripTransitPickupStreetAddress varchar(255) NOT NULL,
	TripTransitDropoffStreetAddress varchar(255) NOT NULL,
	TripTransitCost money NOT NULL,
	CONSTRAINT PK_TRIPTRANSIT PRIMARY KEY NONCLUSTERED (TripTransitID),
	CONSTRAINT FK_TRIPTRANSIT_TRIP FOREIGN KEY (TripID)
		REFERENCES TRIP (TripID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPTRANSITPICKUP_CITY FOREIGN KEY (TripTransitPickupCityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	CONSTRAINT FK_TRIPTRANSITDROPOFF_CITY FOREIGN KEY (TripTransitDropoffCityID)
		REFERENCES CITY (CityID)
		ON DELETE CASCADE
		ON UPDATE CASCADE	
);

